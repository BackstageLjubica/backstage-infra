# test environment deploying to foundations app sandbox
common: 
  # postgres config, host gets modified in deployment, db is used by docker-compose
  POSTGRES_PORT: '5432'
  POSTGRES_DB: 'backstage'
  POSTGRES_USER: 'postgres'

  # AWS Environment
  AWS_REGION: 'us-east-1'
  AWS_ACCOUNT: ""
  TAG_STACK_NAME: "backstage-infra"
  TAG_STACK_PRODUCT: ""


  # Build and Infra Info 
  CONTAINER_PORT: '7000'
  CONTAINER_NAME: 'backstage'
  DOMAIN_NAME: ''
  ACM_ARN: ''
  ECR_REPO_NAME: "backstage"

  # optional will default to 'dockerfile'
  DOCKERFILE: 'dockerfile.test'

  # CodePipeline repo info
  GITHUB_APP_REPO: ""
  GITHUB_INFRA_REPO: ""
  GITHUB_ORG: ""
  CODESTAR_CONN_ARN: ""
  CODESTAR_NOTIFY_ARN: ""
  # can define the following but defaults to 'main'
  # GITHUB_INFRA_BRANCH
  # GITHUB_APP_BRANCH

  # we put secrets in AWS Secrets Manager, so that the build and the container can access these at runtime.
  # github secret lookup for either a token or application secret
  GITHUB_TOKEN_SECRET_NAME: ""
  GITHUB_APP_SECRET_ARN: ""
  # AWS Secret Name 
  AWS_AUTH_SECRET_NAME: ''



# ENV var overrides per stage
stages: 
  test:
    ### This Config overrides for test stage
    # Routing & Discovery
    HOST_NAME: 'test-backstage'
    # Github Auth Secret Name, if you use github auth
    GITHUB_AUTH_SECRET_NAME: ""
    # Node Env
    NODE_ENV: 'development'
    LOG_LEVEL: 'debug'
    # stage approval will install a manual approval gate in front of a deployment action
    STAGE_APPROVAL: False

  prod:
    ### This Config overrides for prod stage
    # Routing & Discovery
    HOST_NAME: 'prod-backstage'
    # github Auth secret Name 
    GITHUB_AUTH_SECRET_NAME: ""
    # stage approval will install a manual approval gate in front of a deployment action
    STAGE_APPROVAL: True
    # approval emails to be notified by approval action 
    APPROVAL_EMAILS:
      - ""